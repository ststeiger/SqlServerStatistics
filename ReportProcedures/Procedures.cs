
// using Microsoft.SqlServer.Server;
// using System.Data.SqlTypes;

// using System.Data.SqlClient;


//using System; using System.Data; using System.Data.SqlClient; using Microsoft.SqlServer.Server;
//  See more at: http://www.sqlteam.com/article/writing-clr-stored-procedures-in-charp-returning-data-part-2#sthash.U5dv6ARC.dpuf


namespace ReportProcedures
{


    public class Procedures
    {

        // sp_configure 'show advanced options', 1;
        // GO
        // RECONFIGURE;
        // GO

        // sp_configure 'clr enabled', 1;
        // GO
        // RECONFIGURE;
        // GO

        // sp_configure 'show advanced options', 0;
        // GO
        // RECONFIGURE;
        // GO

        // EXEC sp_changedbowner 'sa'
        // ALTER DATABASE TestDb SET TRUSTWORTHY ON;


        // CREATE ASSEMBLY [ReportProcedures]
        // AUTHORIZATION [dbo]
        // FROM 
        // WITH PERMISSION_SET = UNSAFE
        // GO






        // CREATE PROCEDURE sp_ReturnPgDataTable AS 
        // EXTERNAL NAME ReportProcedures.[ReportProcedures.Procedures].ReturnPgDataTable

        // EXECUTE sp_ReturnPgDataTable;
        [Microsoft.SqlServer.Server.SqlProcedure()]
        public static void ReturnPgDataTable()
        {
            System.Data.Common.DbProviderFactory fac = AnySqlHelper.GetFactory(typeof(Npgsql.NpgsqlFactory));

            using (System.Data.Common.DbConnection conn = fac.CreateConnection())
            {
                conn.ConnectionString = AnySqlHelper.GetConnectionString();

                using (System.Data.Common.DbCommand cmd = conn.CreateCommand())
                {
                    cmd.Connection = conn;

                    //cmd.CommandText = @"SELECT * FROM dokanfs ";
                    cmd.CommandText = @"SELECT * FROM t_blogpost ";

                    using (System.Data.Common.DbDataAdapter ada = fac.CreateDataAdapter())
                    {
                        ada.SelectCommand = cmd;

                        using (System.Data.DataTable dt = new System.Data.DataTable())
                        {
                            ada.Fill(dt);
                            ReportProcedures.SqlTools.SqlPipeUtil.SendDataTableOverPipe(dt);
                        } // End Using dt 

                    } // End Using ada

                } // End using cmd 

                if (conn.State != System.Data.ConnectionState.Closed)
                    conn.Close();
            } // End using conn

        } // End Sub ReturnPgDataTable 



        // CREATE PROCEDURE sp_ReturnDataTable AS 
        // EXTERNAL NAME ReportProcedures.[ReportProcedures.Procedures].ReturnDataTable

        // EXECUTE sp_ReturnDataTable;
        [Microsoft.SqlServer.Server.SqlProcedure()]
        public static void ReturnDataTable()
        {
            System.Data.Common.DbProviderFactory fac = AnySqlHelper.GetFactory(typeof(System.Data.SqlClient.SqlClientFactory));

            using (System.Data.Common.DbConnection conn = fac.CreateConnection())
            {
                conn.ConnectionString = AnySqlHelper.GetMsConnectionString();

                using (System.Data.Common.DbCommand cmd = conn.CreateCommand())
                {
                    cmd.Connection = conn;
                    cmd.CommandText = @"SELECT * FROM T_Benutzer ";


                    using (System.Data.Common.DbDataAdapter ada = fac.CreateDataAdapter())
                    {
                        ada.SelectCommand = cmd;

                        using (System.Data.DataTable dt = new System.Data.DataTable())
                        {
                            ada.Fill(dt);
                            ReportProcedures.SqlTools.SqlPipeUtil.SendDataTableOverPipe(dt);
                        } // End Using dt 

                    } // End Using ada

                } // End Using cmd 

                if (conn.State != System.Data.ConnectionState.Closed)
                    conn.Close();
            } // End using conn

        } // End Sub ReturnDataTable 



        // CREATE PROCEDURE sp_ReturnQuery AS 
        // EXTERNAL NAME ReportProcedures.[ReportProcedures.Procedures].ReturnQuery

        // EXECUTE sp_ReturnQuery;


        // Works with safe 
        [Microsoft.SqlServer.Server.SqlProcedure()]
        public static void ReturnQuery()
        {
            using (System.Data.SqlClient.SqlConnection conn = new System.Data.SqlClient.SqlConnection("context connection=true"))
            {
                using (System.Data.SqlClient.SqlCommand cmd = conn.CreateCommand())
                {
                    cmd.Connection = conn;
                    cmd.CommandText = @"SELECT * FROM T_Benutzer ";

                    if(conn.State != System.Data.ConnectionState.Open)
                        conn.Open();

                    System.Data.SqlClient.SqlDataReader rdr = cmd.ExecuteReader();
                    Microsoft.SqlServer.Server.SqlContext.Pipe.Send(rdr);
                    // See more at: http://www.sqlteam.com/article/writing-clr-stored-procedures-in-charp-returning-data-part-2#sthash.U5dv6ARC.dpuf
                } // End Using cmd 

                if (conn.State != System.Data.ConnectionState.Closed)
                    conn.Close();
            } // End Using conn

        } // End Sub ReturnQuery 




        // CREATE PROCEDURE sp_InsertCurrency 
        //     @currencyCode NVARCHAR(10) 
        //    ,@name NVARCHAR(500) 
        // AS 
        // EXTERNAL NAME ReportProcedures.[ReportProcedures.Procedures].InsertCurrency_CS


        // DECLARE @currencyCode nvarchar(10)
        // DECLARE @name nvarchar(500)

        // SET @currencyCode = 'CHF'
        // SET @name = 'Swiss Franc'

        // EXECUTE sp_InsertCurrency @currencyCode, @name



        // Requires unsafe 
        [Microsoft.SqlServer.Server.SqlProcedure()]
        public static void InsertCurrency_CS(System.Data.SqlTypes.SqlString currencyCode, System.Data.SqlTypes.SqlString name)
        {
            using (System.Data.SqlClient.SqlConnection conn = new System.Data.SqlClient.SqlConnection("context connection=true"))
            {

                using (System.Data.SqlClient.SqlCommand cmd = conn.CreateCommand())
                {
                    System.Data.SqlClient.SqlParameter currencyCodeParam = new System.Data.SqlClient.SqlParameter("@CurrencyCode", System.Data.SqlDbType.NVarChar);
                    System.Data.SqlClient.SqlParameter nameParam = new System.Data.SqlClient.SqlParameter("@Name", System.Data.SqlDbType.NVarChar);


                    currencyCodeParam.Value = currencyCode;
                    nameParam.Value = name;

                    cmd.Parameters.Add(currencyCodeParam);
                    cmd.Parameters.Add(nameParam);

                    string strCreateTable = @"
CREATE TABLE dbo.T_TestCurrency
( 
	 CUR_Code national character varying(10) NULL 
	,CUR_Name national character varying(500) NULL 
	,CUR_LastModified datetime NULL 
); 
";
                    System.Diagnostics.Debug.WriteLine(strCreateTable);


                    cmd.CommandText = @"
INSERT INTO dbo.T_TestCurrency(CUR_Code, CUR_Name, CUR_LastModified) 
VALUES(@CurrencyCode, @Name, CURRENT_TIMESTAMP) 
";

                    if (conn.State != System.Data.ConnectionState.Open)
                        conn.Open();

                    cmd.ExecuteNonQuery();
                } // End Using cmd 

                if (conn.State != System.Data.ConnectionState.Closed)
                    conn.Close();
            } // End Using conn

        } // End Sub InsertCurrency_CS 


    } // End Class Procedures


} // End Namespace ReportProcedures
